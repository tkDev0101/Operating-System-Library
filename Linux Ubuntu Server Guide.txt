Linux Ubuntu Server && Linux Ubuntu Guide


========================================================================================
Linux Ubuntu Server Guide

About



---------------------------------------------
 - Here are some essential commands to navigate the system:

pwd           # Shows your current location in the system
ls            # Lists the files and folders in the current directory
cd folder     # Moves into a specific folder
cd ..         # Moves up one level in the directory tree
mkdir newdir  # Creates a new folder
rm file       # Deletes a file
rm -r dir     # Deletes a directory and its contents


cat /etc/os-release	#Check OS Release Information
lsb_release -a		#information about your Linux distribution
			#Check with lsb_release (For Ubuntu/Debian)

ls -la
 - l (long listing format)
 - a (all): includes hidden files,  those whose names begin with a dot (.)


---------------------------------------------
 - User Commands:

whoami         # Shows your current username
id             # Displays your user and group IDs
adduser newuser  # Creates a new user
passwd newuser   # Changes a user's password
deluser newuser  # Deletes a user
sudo usermod -aG sudo newusername	#Grant Administrative (sudo) Privileges
cat /etc/passwd | grep newusername	#Check if the user was created successfully:

cut -d: -f1 /etc/passwd			#List All Users on the System



---------------------------------------------
 - Understanding File Permissions:
ls -l file   # View file permissions
chmod 755 file  # Change file permissions
chown user file  # Change file ownership


---------------------------------------------
Types of Permissions:
Read (r): 4
Write (w): 2
Execute (x): 1

rwxr-xr-- translates to 755


chmod (Change File Permissions)



chown (Change File Owner and Group)



---------------------------------------------
 - Installing and Managing Software (APT Package Manager)

Ubuntu Server uses APT (Advanced Package Tool) to install and manage software. 
It‚Äôs very similar to an app store, but everything is done through the command line.

Essential Commands for Package Management:
apt update             # Updates the list of available software
apt upgrade            # Upgrades installed software to the latest versions
apt install package    # Installs a new software package
apt remove package     # Removes a software package
apt search package     # Searches for available software

Want to install a web server? Try this:
 - apt install apache2 -y


---------------------------------------------
 - Networking Basics

ip a               # Shows IP addresses
ip route           # Displays network routes
hostname -I        # Shows your server‚Äôs IP address
ping google.com    # Tests if you have internet connectivity
netstat -tulnp     # Lists open network ports

These commands help you diagnose and manage network connections on your server.


---------------------------------------------
 - Monitoring System Performance:

top         # Shows active processes
htop        # A better, interactive process viewer (install using `apt install htop`)
free -h     # Shows memory usage
df -h       # Shows disk space usage
uptime      # Shows how long the server has been running


---------------------------------------------
 - Securing Your Server with a Firewall (UFW) (Uncomplicated Firewall):

ufw status           # Checks if the firewall is enabled
ufw allow ssh        # Allows SSH access
ufw allow 80/tcp     # Allows HTTP traffic (for web servers)
ufw enable           # Activates the firewall
ufw disable          # Deactivates the firewall


---------------------------------------------
 - Server Updates:

apt update && apt upgrade -y  # Updates the system packages
reboot                        # Restarts the server
shutdown -h now               # Shuts down the server


---------------------------------------------
 - Remote Access with SSH:

SSH (Secure Shell) lets you control your server from another computer. 
This is especially useful for managing cloud servers.

 - To enable SSH on Ubuntu Server:
apt install openssh-server -y
systemctl enable ssh
systemctl start ssh

 - To connect from another computer:
ssh username@server-ip
Example: ssh user@192.168.1.100


========================================================================================
Linux Ubuntu Guide


---------------------------------------------
Navigating Linux (Basic Commands)

- Opening the Terminal
Press Ctrl + Alt + T OR

---------------------------------------------
- Basic Commands:

pwd ‚Üí Show current directory.
ls ‚Üí List files in the current directory.
cd folder_name ‚Üí Change directory.
mkdir new_folder ‚Üí Create a new folder.
touch file.txt ‚Üí Create an empty file.
rm file.txt ‚Üí Delete a file.
rmdir folder_name ‚Üí Delete an empty folder.
rm -r folder_name ‚Üí Delete a folder and its contents.

- Viewing File Contents
cat filename ‚Üí Show file content.
nano filename ‚Üí Open a file in the Nano text editor.
less filename ‚Üí View file one page at a time.




---------------------------------------------
 - Updating & Upgrading Ubuntu:

Method 1: Using the Terminal (Recommended)

Step 1: Update the Package List
sudo apt update
Fetches the latest list of available updates.

Step 2: Upgrade Installed Packages
sudo apt upgrade -y
Installs updates for all installed software.

Step 3: Full System Upgrade (Optional)
sudo apt full-upgrade -y
Upgrades everything, including dependencies.

Step 4: Clean Unnecessary Files
sudo apt autoremove -y
sudo apt clean
Removes old, unused packages and clears the package cache.

Step 5: Reboot the System
sudo reboot
Restart the system to apply updates properly.


Method 2: Using the GUI (Graphical Interface)

Open Software Updater.
Wait for it to check for updates.
Click Install Now if updates are available.
Enter your password when prompted.
Restart if required.


---------------------------------------------
 - Managing Users & Permissions:

 - User Management:

whoami ‚Üí Shows the currently logged-in user.
sudo adduser username ‚Üí Create a new user.
sudo usermod -aG sudo username ‚Üí Grant admin privileges.
su - username ‚Üí Switch user.
sudo deluser username ‚Üí Remove a user.


---------------------------------------------
 - File Permissions:

ls -l ‚Üí View file permissions.
chmod 755 filename ‚Üí Change file permissions.
sudo chown user:group filename ‚Üí Change file ownership.


---------------------------------------------
 - Installing and Managing Software:

sudo apt install package_name -y ‚Üí Install software.
sudo apt remove package_name -y ‚Üí Uninstall software.
apt search package_name ‚Üí Search for software.
dpkg --list ‚Üí List installed software.


---------------------------------------------
 - System Monitoring & Logs:

df -h ‚Üí Check disk space.
free -h ‚Üí Check memory usage.
top ‚Üí Monitor system processes.
sudo journalctl -xe ‚Üí View system logs.


---------------------------------------------
 - Introduction to Proxmox & Virtualization:

What is Proxmox?
Proxmox is an open-source virtualization platform used to run virtual machines (VMs) and containers.
It is a great alternative to VMware and VirtualBox.

Installing Proxmox
Download Proxmox from proxmox.com.
Create a bootable USB and boot from it.
Follow the installation instructions.
Access the web interface by entering https://your-server-ip:8006 in a browser.
Create and manage virtual machines.


---------------------------------------------
 - Automating Updates:

sudo apt install unattended-upgrades -y
sudo dpkg-reconfigure --priority=low unattended-upgrades


========================================================================================





Mastering **Linux, Bash, and Networking** is crucial for **Cloud Engineers & DevOps Engineers** since most cloud environments run on **Linux-based servers**. Below, I‚Äôll break down **each topic** with a **structured learning path** and **YouTube search titles** to help you learn effectively.  

---

# **üíª 1. Linux ‚Äì Mastering Cloud Server OS**  
Linux is the **most widely used OS in cloud computing**. Learning **command-line operations** and **server management** is essential.  

## **üìå Learning Path (Linux Basics ‚Üí Advanced)**  

### **üìç Phase 1: Linux Basics (1-2 Weeks)**  
üîπ **Search on YouTube:**  
‚úÖ `"Linux for Beginners Full Course"`  
‚úÖ `"Basic Linux Commands for DevOps & Cloud Engineers"`  
‚úÖ `"Linux File System Explained - Everything You Need to Know"`  
‚úÖ `"How to Install and Use Linux Terminal on Windows (WSL)"`  

üé• **Recommended Video:**  
[Linux Full Course (Free)](https://www.youtube.com/watch?v=wBp0Rb-ZJak)  

üìå **Practice Tasks:**  
1Ô∏è‚É£ Learn and use **basic Linux commands** (`ls`, `cd`, `cp`, `mv`, `rm`, `mkdir`, `pwd`, `chmod`, `chown`, `cat`, `echo`, `nano`)  
2Ô∏è‚É£ Understand **file permissions & ownership** (`chmod`, `chown`)  
3Ô∏è‚É£ Explore the **Linux directory structure** (`/home`, `/etc`, `/var`, `/usr`, `/opt`, `/tmp`, `/dev`)  

---

### **üìç Phase 2: Linux Server Administration (2-3 Weeks)**  
üîπ **Search on YouTube:**  
‚úÖ `"Linux User Management & Permissions Explained"`  
‚úÖ `"Linux Process Management - How to Use ps, top, htop, kill"`  
‚úÖ `"Linux System Monitoring - Best Commands to Check Server Health"`  
‚úÖ `"Linux Logs & Troubleshooting - How to Read Log Files"`  

üé• **Recommended Video:**  
[Linux System Administration Course](https://www.youtube.com/watch?v=BIcJ8-7FHpI)  

üìå **Practice Tasks:**  
1Ô∏è‚É£ Manage **users and groups** (`adduser`, `usermod`, `passwd`, `groupadd`)  
2Ô∏è‚É£ Set up **Linux firewall rules** (`ufw`, `iptables`)  
3Ô∏è‚É£ Monitor **processes & system performance** (`top`, `htop`, `ps`, `free`, `df`, `du`)  

---

### **üìç Phase 3: Advanced Linux for DevOps (3+ Weeks)**  
üîπ **Search on YouTube:**  
‚úÖ `"Linux Hardening & Security - Best Practices"`  
‚úÖ `"How to Set Up a Web Server (Apache/Nginx) on Linux"`  
‚úÖ `"Automate Server Tasks with Bash & Cron Jobs"`  
‚úÖ `"Linux Network Configuration - How to Set Static & Dynamic IP"`  

üé• **Recommended Video:**  
[Advanced Linux Security & Hardening](https://www.youtube.com/watch?v=XBwD_xVDhT4)  

üìå **Advanced Projects:**  
1Ô∏è‚É£ Set up **a Linux server on AWS/Google Cloud**  
2Ô∏è‚É£ Configure and secure **SSH access** (`ssh-keygen`, `sshd_config`)  
3Ô∏è‚É£ Automate **server updates & monitoring** using cron jobs  

---

# **üñ•Ô∏è 2. Bash & Shell Scripting ‚Äì Automate Cloud Tasks**  
Bash scripting is used to **automate cloud tasks, deployments, and server management**.

## **üìå Learning Path (Bash Scripting Basics ‚Üí Advanced Automation)**  

### **üìç Phase 1: Bash Basics (1-2 Weeks)**  
üîπ **Search on YouTube:**  
‚úÖ `"Bash Scripting for Beginners - Full Course"`  
‚úÖ `"Shell Scripting vs Python for Automation"`  
‚úÖ `"How to Write Your First Bash Script"`  

üé• **Recommended Video:**  
[Bash Scripting Full Course](https://www.youtube.com/watch?v=e7BufAVwDiM)  

üìå **Practice Tasks:**  
1Ô∏è‚É£ Create a **basic shell script** (`.sh` file)  
2Ô∏è‚É£ Use **variables, loops, and functions** in Bash scripts  
3Ô∏è‚É£ Automate **log file cleaning & server updates**  

---

### **üìç Phase 2: Advanced Bash Automation (2-3 Weeks)**  
üîπ **Search on YouTube:**  
‚úÖ `"Automate AWS EC2 Management with Bash Scripts"`  
‚úÖ `"Bash Scripting for Cloud & DevOps Engineers"`  
‚úÖ `"Best Shell Scripting Practices for System Admins"`  

üìå **Advanced Projects:**  
1Ô∏è‚É£ Automate **server backup & restore processes**  
2Ô∏è‚É£ Write a **script to check server uptime and send alerts**  
3Ô∏è‚É£ Deploy **a cloud infrastructure using a Bash script**  

üé• **Recommended Video:**  
[Advanced Bash Scripting & Automation](https://www.youtube.com/watch?v=I4EWvMFj37g)  

---

# **üåê 3. Networking ‚Äì Essential for Cloud & DevOps Engineers**  
Networking knowledge is critical for **cloud deployments, security, and troubleshooting**.

## **üìå Learning Path (Networking Basics ‚Üí Cloud Networking)**  

### **üìç Phase 1: Networking Fundamentals (1-2 Weeks)**  
üîπ **Search on YouTube:**  
‚úÖ `"Networking Basics for Beginners - Full Course"`  
‚úÖ `"How DNS Works - Complete Explanation"`  
‚úÖ `"HTTP vs HTTPS Explained - How Web Communication Works"`  
‚úÖ `"Understanding TCP/IP Networking - A Beginner's Guide"`  

üé• **Recommended Video:**  
[Networking Basics Full Course](https://www.youtube.com/watch?v=qiQR5rTSshw)  

üìå **Practice Tasks:**  
1Ô∏è‚É£ Learn **how DNS works** (domain resolution, name servers)  
2Ô∏è‚É£ Understand **how HTTP & HTTPS work** (status codes, requests, responses)  
3Ô∏è‚É£ Set up a **simple local web server using Nginx**  

---

### **üìç Phase 2: Advanced Networking (3+ Weeks)**  
üîπ **Search on YouTube:**  
‚úÖ `"VPNs Explained - How Do They Work?"`  
‚úÖ `"Firewalls & Network Security - Best Practices"`  
‚úÖ `"AWS VPC Explained - How to Set Up Secure Cloud Networking"`  
‚úÖ `"Load Balancers vs Reverse Proxies - When to Use What?"`  

üé• **Recommended Video:**  
[Advanced Networking & Security](https://www.youtube.com/watch?v=J25E-IRzqDc)  

üìå **Advanced Projects:**  
1Ô∏è‚É£ Set up a **VPN server** on AWS/Linux  
2Ô∏è‚É£ Configure **a firewall with iptables/UFW**  
3Ô∏è‚É£ Deploy **a Load Balancer & Reverse Proxy**  

---

# **üöÄ Next Steps & Suggested Learning Order**  
1Ô∏è‚É£ **Start with Linux** ‚Äì Master CLI, server management, and security  
2Ô∏è‚É£ **Learn Bash Scripting** ‚Äì Automate cloud tasks  
3Ô∏è‚É£ **Master Networking** ‚Äì Understand how cloud services communicate  

üìå **Would you like more hands-on project ideas, GitHub repositories, or certification recommendations?** üòä









